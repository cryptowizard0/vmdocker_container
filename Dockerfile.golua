# Use official golang image as builder stage
FROM --platform=linux/amd64 golang:1.24.2 as builder

# Set environment variables
ENV GOPRIVATE=github.com/hymatrix/hymx/
ENV GO111MODULE=on
ENV GODEBUG=multipathtcp=0



# Create working directory
WORKDIR /build

# Copy project files
COPY go.mod go.sum ./
RUN go mod download

COPY . .

# Install Lua development dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    build-essential \
    libreadline-dev \
    liblua5.3-dev \
    && rm -rf /var/lib/apt/lists/*

# Build project
RUN CGO_ENABLED=1 go build -tags=lua53 -o main

# Use slim base image for runtime environment
# FROM --platform=linux/amd64 debian:bookworm-slim
FROM --platform=linux/amd64 ubuntu:24.04

ENV LUA_VERSION=5.3.4
ENV GO111MODULE=on
ENV GODEBUG=multipathtcp=0

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    lua5.3 \
    liblua5.3-dev \
    sqlite3 \
    libsqlite3-dev \
    luarocks \
    && rm -rf /var/lib/apt/lists/*


RUN luarocks install lsqlite3 \
    SQLITE_DIR=/usr \
    LUA_INCDIR=/usr/include/lua5.3

WORKDIR /app

# Copy necessary files from builder stage
COPY --from=builder /build/main /app/
COPY --from=builder /build/ao /app/ao

# Set permissions
RUN chmod -R 555 /app/ao

# Set environment variables
ENV AO_PATH=/app/ao/2.0.1

# Expose port
EXPOSE 8080

# Set startup command
CMD ["/app/main"]